<?xml version="1.0" ?>
<SmellBaseline>
  <ManuallySuppressedIssues></ManuallySuppressedIssues>
  <CurrentIssues>
    <ID>CyclomaticComplexMethod:UrlNormalizer.kt$UrlNormalizer$fun normalize(url: String): String</ID>
    <ID>EmptyFunctionBlock:DownloaderBotApplicationTests.kt$DownloaderBotApplicationTests${ }</ID>
    <ID>ForbiddenComment:DownloadCommand.kt$DownloadCommand$// TODO: handle many videos properly</ID>
    <ID>LongParameterList:BaseCliTool.kt$BaseCliTool$( val props: MediaProperties, val pathGenerator: PathGenerator, val cmdBuilder: CommandBuilder, val runner: ProcessRunner, val jsonExtractor: JsonExtractor, val jsonParser: JsonParser&lt;META&gt;, val fileFinder: FilesByPrefixFinder, override val toolId: ToolId, )</ID>
    <ID>LongParameterList:BotPort.kt$BotPort$( chatId: Long, file: InputFile, caption: String? = null, durationSeconds: Int? = null, width: Int? = null, height: Int? = null, replyToMessageId: Long? = null, replyMarkup: ReplyMarkup? = null, )</ID>
    <ID>LongParameterList:BotPort.kt$BotPort$( chatId: Long, file: InputFile, durationSeconds: Int? = null, performer: String? = null, title: String? = null, replyToMessageId: Long? = null, replyMarkup: ReplyMarkup? = null, )</ID>
    <ID>LongParameterList:BotPort.kt$BotPort$( type: MediaType, chatId: Long, file: InputFile, caption: String? = null, replyToMessageId: Long? = null, replyMarkup: ReplyMarkup? = null, )</ID>
    <ID>MagicNumber:BasePrefixGenerator.kt$BasePrefixGenerator$8</ID>
    <ID>MagicNumber:Bucket4jRateLimiter.kt$Bucket4jRateLimiter$1_000_000</ID>
    <ID>MagicNumber:CachePort.kt$CachePort$7</ID>
    <ID>MagicNumber:CacheProperties.kt$CacheProperties$60</ID>
    <ID>MagicNumber:CacheProperties.kt$CacheProperties$7</ID>
    <ID>MagicNumber:DurationUtils.kt$1000.0</ID>
    <ID>MagicNumber:DurationUtils.kt$1_000_000</ID>
    <ID>MagicNumber:MediaProperties.kt$MediaCleanupProperties$10</ID>
    <ID>MagicNumber:MediaProperties.kt$MediaCleanupProperties$5</ID>
    <ID>MagicNumber:MediaProperties.kt$MediaCleanupProperties$7</ID>
    <ID>MagicNumber:MediaProperties.kt$MediaSizeLimits$10</ID>
    <ID>MagicNumber:MediaProperties.kt$MediaSizeLimits$50</ID>
    <ID>MagicNumber:MediaServiceImpl.kt$MediaServiceImpl$100</ID>
    <ID>MagicNumber:OkHttpConfig.kt$OkHttpConfig$20</ID>
    <ID>MagicNumber:RateLimitProperties.kt$8</ID>
    <ID>MagicNumber:UrlNormalizer.kt$UrlNormalizer$443</ID>
    <ID>MagicNumber:UrlNormalizer.kt$UrlNormalizer$80</ID>
    <ID>MaxLineLength:ConfigUtils.kt$inline fun &lt;reified T&gt; createJsonParser(mapper: ObjectMapper): JsonParser&lt;T&gt;</ID>
    <ID>MaxLineLength:RateLimitProperties.kt$global = global.copy(refill = global.refill.copy(period = Duration.ofMillis(global.refill.period.toMillis())))</ID>
    <ID>MaxLineLength:RedisConfig.kt$RedisConfig$fun</ID>
    <ID>NestedBlockDepth:MediaCleanupService.kt$MediaCleanupService$suspend fun cleanup(): MediaCleanupReport</ID>
    <ID>ReturnCount:Mappers.kt$fun &lt;T : Any&gt; Pair&lt;HttpResponse&lt;TgEnvelope&lt;T&gt;?&gt;?, Exception?&gt;.toGateway(): GatewayResult&lt;T&gt;</ID>
    <ID>ReturnCount:MediaCleanupService.kt$MediaCleanupService$@SuppressWarnings("TooGenericExceptionCaught") private fun toMediaFile(path: Path): MediaFile?</ID>
    <ID>ReturnCount:MediaServiceImpl.kt$MediaServiceImpl$override suspend fun download(url: String): List&lt;Media&gt;</ID>
    <ID>ReturnCount:UrlNormalizer.kt$UrlNormalizer$fun normalize(url: String): String</ID>
    <ID>TooGenericExceptionCaught:Bucket4jRateLimiter.kt$Bucket4jRateLimiter$e: Exception</ID>
    <ID>TooGenericExceptionCaught:ConcurrencyConfig.kt$ConcurrencyConfig.BotCoroutineExceptionHandler$e: Exception</ID>
  </CurrentIssues>
</SmellBaseline>
